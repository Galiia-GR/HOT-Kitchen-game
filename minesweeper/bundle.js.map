{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://minesweeper/./src/clickfield.js","webpack://minesweeper/./src/drawfield.js","webpack://minesweeper/./src/index.js"],"sourcesContent":["import {\n  fieldsArr, fieldsArr1, fieldsArr2, uroven, countFields, countBombs, isGameOver,\n} from './drawfield.js';\n\nexport let flagCount = 0;\nlet id;\n\n\nexport function clickfield(field) {\n  console.log(uroven);\n\n  id = Number(field.getAttribute('id'));\n\n  if (field.classList.contains('open') || field.classList.contains('flag')) return;\n  if (isGameOver) return;\n  if (field.classList.contains('bomb') || (field.classList.contains('bomb-medium') || (field.classList.contains('bomb-hard')))) return;\n\n  const numbers = field.getAttribute('data');\n  if (numbers != 0) {\n    field.innerText = numbers;\n    field.classList.add('open');\n    field.classList.add('number');\n    switch (numbers) {\n      case '1':\n        field.classList.add('one');\n        break;\n\n      case '2':\n        field.classList.add('two');\n        break;\n      case '3':\n        field.classList.add('three');\n        break;\n      case '4':\n        field.classList.add('four');\n        break;\n      default:\n                // do nothing;\n    }\n  }\n\n  if (document.querySelector('.active-easy')) {\n    emptyFieldGrow(id);\n    console.log(id);\n    fieldsArr[id].classList.add('open');\n  }\n\n  if (document.querySelector('.active-medium')) {\n    emptyFieldGrowMedium(id);\n    console.log(id);\n    fieldsArr1[id].classList.add('open');\n  }\n\n  if (document.querySelector('.active-hard')) {\n    emptyFieldGrowHard(id);\n    console.log(id);\n    fieldsArr2[id].classList.add('open');\n  }\n}\n\nfunction emptyFieldGrow(id) {\n  const isLeftEdge = (id % countFields === 0);\n\n  const isRightEdge = (id % countFields === countFields - 1);\n\n  setTimeout(() => {\n    if (id + 1 <= ((countFields * countFields) - 1) && !isRightEdge && !fieldsArr[id].classList.contains('number')\n  && !fieldsArr[id + 1].classList.contains('open')\n  && !fieldsArr[id + 1].classList.contains('flag')\n  && !fieldsArr[id + 1].classList.contains('bomb')) {\n      const newId = fieldsArr[id + 1].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id - 1 >= 0 && !isLeftEdge && !fieldsArr[id].classList.contains('number')\n      && !fieldsArr[id - 1].classList.contains('open')\n&& !fieldsArr[id - 1].classList.contains('flag')\n&& !fieldsArr[id - 1].classList.contains('bomb')) {\n      const newId = fieldsArr[id - 1].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id + countFields <= ((countFields * countFields) - 1) && !fieldsArr[id].classList.contains('number') /// нижнее поле (проверка на вариабельность)\n   && !fieldsArr[id + countFields].classList.contains('open')\n   && !fieldsArr[id + countFields].classList.contains('flag')\n   && !fieldsArr[id + countFields].classList.contains('bomb')) {\n      const newId = fieldsArr[id + countFields].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id + (countFields + 1) <= ((countFields * countFields) - 1) && !isRightEdge && !fieldsArr[id].classList.contains('number') /// нижнее правое поле\n    && !fieldsArr[id + (countFields + 1)].classList.contains('open')\n    && !fieldsArr[id + (countFields + 1)].classList.contains('flag')\n    && !fieldsArr[id + (countFields + 1)].classList.contains('bomb')) {\n      const newId = fieldsArr[id + (countFields + 1)].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id + (countFields - 1) <= ((countFields * countFields) - 1) && !isLeftEdge && !fieldsArr[id].classList.contains('number') /// нижнее левое поле\n    && !fieldsArr[id + (countFields - 1)].classList.contains('open')\n    && !fieldsArr[id + (countFields - 1)].classList.contains('flag')\n    && !fieldsArr[id + (countFields - 1)].classList.contains('bomb')) {\n      const newId = fieldsArr[id + (countFields - 1)].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id - (countFields - 1) >= 0 && !isRightEdge && !fieldsArr[id].classList.contains('number') /// верхнее правое поле\n      && !fieldsArr[id - (countFields - 1)].classList.contains('open')\n      && !fieldsArr[id - (countFields - 1)].classList.contains('flag')\n      && !fieldsArr[id - (countFields - 1)].classList.contains('bomb')) {\n      const newId = fieldsArr[id - (countFields - 1)].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id - countFields >= 0 && !fieldsArr[id].classList.contains('number') /// /верхнее поле\n    && !fieldsArr[id - countFields].classList.contains('open')\n   && !fieldsArr[id - countFields].classList.contains('flag')\n   && !fieldsArr[id - countFields].classList.contains('bomb')) {\n      const newId = fieldsArr[id - countFields].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id - (countFields + 1) >= 0 && !isLeftEdge && !fieldsArr[id].classList.contains('number') /// /верхнее левое поле\n      && !fieldsArr[id - (countFields + 1)].classList.contains('open')\n      && !fieldsArr[id - (countFields + 1)].classList.contains('flag')\n      && !fieldsArr[id - (countFields + 1)].classList.contains('bomb')) {\n      const newId = fieldsArr[id - (countFields + 1)].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n  }, 50);\n}\n\nfunction emptyFieldGrowMedium(id) {\n  const isLeftEdge = (id % countFields === 0);\n\n  const isRightEdge = (id % countFields === countFields - 1);\n\n  setTimeout(() => {\n    if (id + 1 <= ((countFields * countFields) - 1) && !isRightEdge && !fieldsArr1[id].classList.contains('number')\n  && !fieldsArr1[id + 1].classList.contains('open')\n  && !fieldsArr1[id + 1].classList.contains('flag')\n  && !fieldsArr1[id + 1].classList.contains('bomb-medium')) {\n      const newId = fieldsArr1[id + 1].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id - 1 >= 0 && !isLeftEdge && !fieldsArr1[id].classList.contains('number')\n      && !fieldsArr1[id - 1].classList.contains('open')\n&& !fieldsArr1[id - 1].classList.contains('flag')\n&& !fieldsArr1[id - 1].classList.contains('bomb-medium')) {\n      const newId = fieldsArr1[id - 1].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id + countFields <= ((countFields * countFields) - 1) && !fieldsArr1[id].classList.contains('number') /// нижнее поле (проверка на вариабельность)\n   && !fieldsArr1[id + countFields].classList.contains('open')\n   && !fieldsArr1[id + countFields].classList.contains('flag')\n   && !fieldsArr1[id + countFields].classList.contains('bomb-medium')) {\n      const newId = fieldsArr1[id + countFields].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id + (countFields + 1) <= ((countFields * countFields) - 1) && !isRightEdge && !fieldsArr1[id].classList.contains('number') /// нижнее правое поле\n    && !fieldsArr1[id + (countFields + 1)].classList.contains('open')\n    && !fieldsArr1[id + (countFields + 1)].classList.contains('flag')\n    && !fieldsArr1[id + (countFields + 1)].classList.contains('bomb-medium')) {\n      const newId = fieldsArr1[id + (countFields + 1)].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id + (countFields - 1) <= ((countFields * countFields) - 1) && !isLeftEdge && !fieldsArr1[id].classList.contains('number') /// нижнее левое поле\n    && !fieldsArr1[id + (countFields - 1)].classList.contains('open')\n    && !fieldsArr1[id + (countFields - 1)].classList.contains('flag')\n    && !fieldsArr1[id + (countFields - 1)].classList.contains('bomb-medium')) {\n      const newId = fieldsArr1[id + (countFields - 1)].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id - (countFields - 1) >= 0 && !isRightEdge && !fieldsArr1[id].classList.contains('number') /// верхнее правое поле\n      && !fieldsArr1[id - (countFields - 1)].classList.contains('open')\n      && !fieldsArr1[id - (countFields - 1)].classList.contains('flag')\n      && !fieldsArr1[id - (countFields - 1)].classList.contains('bomb-medium')) {\n      const newId = fieldsArr1[id - (countFields - 1)].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id - countFields >= 0 && !fieldsArr1[id].classList.contains('number') /// /верхнее поле\n    && !fieldsArr1[id - countFields].classList.contains('open')\n   && !fieldsArr1[id - countFields].classList.contains('flag')\n   && !fieldsArr1[id - countFields].classList.contains('bomb-medium')) {\n      const newId = fieldsArr1[id - countFields].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id - (countFields + 1) >= 0 && !isLeftEdge && !fieldsArr1[id].classList.contains('number') /// /верхнее левое поле\n      && !fieldsArr1[id - (countFields + 1)].classList.contains('open')\n      && !fieldsArr1[id - (countFields + 1)].classList.contains('flag')\n      && !fieldsArr1[id - (countFields + 1)].classList.contains('bomb-medium')) {\n      const newId = fieldsArr1[id - (countFields + 1)].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n  }, 50);\n}\n\nfunction emptyFieldGrowHard(id) {\n  const isLeftEdge = (id % countFields === 0);\n\n  const isRightEdge = (id % countFields === countFields - 1);\n\n  setTimeout(() => {\n    if (id + 1 <= ((countFields * countFields) - 1) && !isRightEdge && !fieldsArr2[id].classList.contains('number')\n  && !fieldsArr2[id + 1].classList.contains('open')\n  && !fieldsArr2[id + 1].classList.contains('flag')\n  && !fieldsArr2[id + 1].classList.contains('bomb-hard')) {\n      const newId = fieldsArr2[id + 1].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id - 1 >= 0 && !isLeftEdge && !fieldsArr2[id].classList.contains('number')\n      && !fieldsArr2[id - 1].classList.contains('open')\n&& !fieldsArr2[id - 1].classList.contains('flag')\n&& !fieldsArr2[id - 1].classList.contains('bomb-hard')) {\n      const newId = fieldsArr2[id - 1].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id + countFields <= ((countFields * countFields) - 1) && !fieldsArr2[id].classList.contains('number') /// нижнее поле (проверка на вариабельность)\n   && !fieldsArr2[id + countFields].classList.contains('open')\n   && !fieldsArr2[id + countFields].classList.contains('flag')\n   && !fieldsArr2[id + countFields].classList.contains('bomb-hard')) {\n      const newId = fieldsArr2[id + countFields].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id + (countFields + 1) <= ((countFields * countFields) - 1) && !isRightEdge && !fieldsArr2[id].classList.contains('number') /// нижнее правое поле\n    && !fieldsArr2[id + (countFields + 1)].classList.contains('open')\n    && !fieldsArr2[id + (countFields + 1)].classList.contains('flag')\n    && !fieldsArr2[id + (countFields + 1)].classList.contains('bomb-hard')) {\n      const newId = fieldsArr2[id + (countFields + 1)].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id + (countFields - 1) <= ((countFields * countFields) - 1) && !isLeftEdge && !fieldsArr2[id].classList.contains('number') /// нижнее левое поле\n    && !fieldsArr2[id + (countFields - 1)].classList.contains('open')\n    && !fieldsArr2[id + (countFields - 1)].classList.contains('flag')\n    && !fieldsArr2[id + (countFields - 1)].classList.contains('bomb-hard')) {\n      const newId = fieldsArr2[id + (countFields - 1)].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id - (countFields - 1) >= 0 && !isRightEdge && !fieldsArr2[id].classList.contains('number') /// верхнее правое поле\n      && !fieldsArr2[id - (countFields - 1)].classList.contains('open')\n      && !fieldsArr2[id - (countFields - 1)].classList.contains('flag')\n      && !fieldsArr2[id - (countFields - 1)].classList.contains('bomb-hard')) {\n      const newId = fieldsArr2[id - (countFields - 1)].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id - countFields >= 0 && !fieldsArr2[id].classList.contains('number') /// /верхнее поле\n    && !fieldsArr2[id - countFields].classList.contains('open')\n   && !fieldsArr2[id - countFields].classList.contains('flag')\n   && !fieldsArr2[id - countFields].classList.contains('bomb-hard')) {\n      const newId = fieldsArr2[id - countFields].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id - (countFields + 1) >= 0 && !isLeftEdge && !fieldsArr2[id].classList.contains('number') /// /верхнее левое поле\n      && !fieldsArr2[id - (countFields + 1)].classList.contains('open')\n      && !fieldsArr2[id - (countFields + 1)].classList.contains('flag')\n      && !fieldsArr2[id - (countFields + 1)].classList.contains('bomb-hard')) {\n      const newId = fieldsArr2[id - (countFields + 1)].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n  }, 50);\n}\n\nexport function ticFlags(field) {\n  const drawFlag = document.querySelector('.drawFlag');\n  const drawBombs = document.querySelector('.drawBombs');\n  if (isGameOver) return;\n  if (!field.classList.contains('open') && flagCount < countBombs) {\n    if (!field.classList.contains('flag')) {\n      field.classList.add('flag');\n      flagCount++;\n      drawFlag.innerText = flagCount;\n      drawBombs.innerText = countBombs - flagCount;\n      winWin();\n    } else {\n      field.classList.remove('flag');\n      flagCount--;\n      drawFlag.innerText = flagCount;\n      drawBombs.innerText = countBombs - flagCount;\n    }\n  }\n}\n\nfunction winWin() {\n  let checkWin = 0;\n  for (let i = 0; i < fieldsArr.length; i++) {\n    if (fieldsArr[i].classList.contains('flag') && fieldsArr[i].classList.contains('bomb')) {\n      checkWin++;\n    } if (checkWin === countBombs) {\n      document.querySelector('.gameSummary').innerText = 'HOORAY YOU WON!!!';\n      for (let i = 0; i < fieldsArr.length; i++) {\n        fieldsArr[i].classList.add('open');\n      }\n    }\n  }\n}\n","import { clickfield, ticFlags } from './clickfield.js';\n\nconst { body } = document;\nexport let isGameOver = false;\nexport const fieldsArr = [];\nexport const fieldsArr1 = [];\nexport const fieldsArr2 = [];\nexport let countFields;\nexport let countBombs;\nexport let uroven;\nlet bombsArr;\nlet emptyArr;\nlet gameShuflArr;\nconst container = document.createElement('div');\nconst header = document.createElement('header');\nconst title = document.createElement('h1');\nconst gamesSummary = document.createElement('p');\nconst wrap = document.createElement('div');\nconst flag = document.createElement('div');\nconst drawFlag = document.createElement('div');\nconst mines = document.createElement('div');\nconst drawBombs = document.createElement('div');\nconst sound = document.createElement('div');\nconst drawSounds = document.createElement('div');\nconst start = document.createElement('div');\nconst drawStart = document.createElement('div');\nconst score = document.createElement('div');\nconst drawlist = document.createElement('div');\nconst level = document.createElement('div');\nconst easy = document.createElement('div');\nconst medium = document.createElement('div');\nconst hard = document.createElement('div');\nconst minesweeper1 = document.createElement('div');\nconst minesweeper2 = document.createElement('div');\nconst minesweeper3 = document.createElement('div');\n\nexport function drawfield() {\n  container.classList.add('container');\n  body.appendChild(container);\n\n  header.classList.add('header');\n  container.appendChild(header);\n\n  title.classList.add('header__title');\n  header.appendChild(title);\n  title.innerText = 'minesweeper';\n\n  wrap.classList.add('header__wrapper');\n  header.appendChild(wrap);\n\n  flag.classList.add('header__flag');\n  wrap.appendChild(flag);\n  flag.innerText = 'flags';\n  drawFlag.classList.add('drawFlag');\n  flag.appendChild(drawFlag);\n  drawFlag.innerText = 0;\n\n  mines.classList.add('header__mines');\n  wrap.appendChild(mines);\n  mines.innerText = 'mines';\n  drawBombs.classList.add('drawBombs');\n  mines.appendChild(drawBombs);\n\n  sound.classList.add('header__sound');\n  wrap.appendChild(sound);\n  sound.innerText = 'sound';\n  drawSounds.classList.add('drawSounds');\n  sound.appendChild(drawSounds);\n  drawSounds.innerText = 'pull';\n\n  start.classList.add('header__start');\n  wrap.appendChild(start);\n  start.innerText = 'start';\n  drawStart.classList.add('drawStart');\n  start.appendChild(drawStart);\n  drawStart.innerText = 'pull';\n\n  score.classList.add('header__score');\n  wrap.appendChild(score);\n  score.innerText = 'score';\n  drawlist.classList.add('drawList');\n  score.appendChild(drawlist);\n  drawlist.innerText = 'list';\n\n  level.classList.add('header__level');\n  wrap.appendChild(level);\n  level.innerText = 'level';\n\n  easy.classList.add('level__easy');\n  level.appendChild(easy);\n  easy.innerText = 'easy';\n\n  medium.classList.add('level__medium');\n  level.appendChild(medium);\n  medium.innerText = 'medium';\n\n  hard.classList.add('level__hard');\n  level.appendChild(hard);\n  hard.innerText = 'hard';\n\n  minesweeper1.classList.add('minesweeper1');\n  container.appendChild(minesweeper1);\n\n  minesweeper2.classList.add('minesweeper2');\n  container.appendChild(minesweeper2);\n\n  minesweeper3.classList.add('minesweeper3');\n  container.appendChild(minesweeper3);\n\n  gamesSummary.classList.add('gameSummary');\n  container.appendChild(gamesSummary);\n  gamesSummary.innerText = '';\n\n  if (!hard.classList.contains('active-hard') && !easy.classList.contains('active-easy')\n  && !medium.classList.contains('active-medium')) {\n    easy.classList.add('active-easy');\n    minesweeper2.classList.add('hide');\n    minesweeper3.classList.add('hide');\n    uroven = 1;\n    countFields = 10;\n    countBombs = 10;\n    drawBombs.innerText = countBombs;\n    minesweeper2.innerHTML = '';\n    minesweeper3.innerHTML = '';\n    initFields(countFields, countBombs, uroven);\n    eventClick(fieldsArr);\n    console.log(fieldsArr);\n  }\n\n  if (medium.classList.contains('active-medium')) {\n    uroven = 2;\n    countFields = 15;\n    countBombs = 25;\n    drawBombs.innerText = countBombs;\n    minesweeper1.innerHTML = '';\n    minesweeper3.innerHTML = '';\n    initFields(countFields, countBombs, uroven);\n    eventClickMedium(fieldsArr1);\n    console.log(fieldsArr1);\n  }\n\n  if (hard.classList.contains('active-hard')) {\n    uroven = 3;\n    countFields = 25;\n    countBombs = 65;\n    drawBombs.innerText = countBombs;\n    minesweeper1.innerHTML = '';\n    minesweeper2.innerHTML = '';\n    initFields(countFields, countBombs, uroven);\n    eventClickHard(fieldsArr2);\n    console.log(fieldsArr2);\n  }\n\n  level.addEventListener('click', (event) => {\n    event.preventDefault();\n\n    if (event.target.classList.contains('level__easy')) {\n      easy.classList.add('active-easy');\n      medium.classList.remove('active-medium');\n      hard.classList.remove('active-hard');\n      document.innerHTML = '';\n      drawfield();\n      minesweeper1.classList.remove('hide');\n      minesweeper2.classList.add('hide');\n      minesweeper3.classList.add('hide');\n    }\n\n    if (event.target.classList.contains('level__medium')) {\n      medium.classList.add('active-medium');\n      easy.classList.remove('active-easy');\n      hard.classList.remove('active-hard');\n      document.innerHTML = '';\n      drawfield();\n      minesweeper1.classList.add('hide');\n      minesweeper2.classList.remove('hide');\n      minesweeper3.classList.add('hide');\n    }\n    if (event.target.classList.contains('level__hard')) {\n      hard.classList.add('active-hard');\n      easy.classList.remove('active-easy');\n      medium.classList.remove('active-medium');\n      document.innerHTML = '';\n      drawfield();\n      minesweeper1.classList.add('hide');\n      minesweeper2.classList.add('hide');\n      minesweeper3.classList.remove('hide');\n    }\n  });\n}\n\ndrawStart.addEventListener('click', (event) => {\n  event.preventDefault();\n  console.log('restart');\n  location.reload();\n  drawfield();\n});\n\nfunction eventClick(fieldsArr) {\n  fieldsArr.forEach((el) => {\n    el.addEventListener('click', (event) => {\n      event.preventDefault();\n      if (el.classList.contains('bomb')) {\n        isGameOver = true;\n        gamesSummary.innerText = 'BOOM! OOPS YOU LOST!';\n        fieldsArr.forEach((el) => {\n          if (el.classList.contains('bomb')) {\n            if (el.classList.contains('bomb')) {\n              el.classList.add('bomb-open');\n            }\n          }\n        });\n      } if (el.classList.contains('flag')) {\n        return;\n      }\n      clickfield(el);\n    });\n  });\n\n  fieldsArr.forEach((el) => {\n    el.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      ticFlags(event.target);\n    });\n  });\n}\nfunction eventClickMedium(fieldsArr1) {\n  fieldsArr1.forEach((el) => {\n    el.addEventListener('click', (event) => {\n      event.preventDefault();\n      if (el.classList.contains('bomb-medium')) {\n        isGameOver = true;\n        gamesSummary.innerText = 'BOOM! OOPS YOU LOST!';\n        fieldsArr1.forEach((el) => {\n          if (el.classList.contains('bomb-medium')) {\n              el.classList.add('bomb-open');\n            }\n        });\n      } if (el.classList.contains('flag')) {\n        return;\n      }\n      clickfield(el);\n    });\n  });\n\n  fieldsArr1.forEach((el) => {\n    el.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      ticFlags(event.target);\n    });\n  });\n}\n\nfunction eventClickHard(fieldsArr2) {\n  fieldsArr2.forEach((el) => {\n    el.addEventListener('click', (event) => {\n      event.preventDefault();\n      if (el.classList.contains('bomb-hard')) {\n        isGameOver = true;\n        gamesSummary.innerText = 'BOOM! OOPS YOU LOST!';\n        fieldsArr2.forEach((el) => {\n          if (el.classList.contains('bomb-hard')) {\n              el.classList.add('bomb-open');\n            }\n        });\n      } if (el.classList.contains('flag')) {\n        return;\n      }\n      clickfield(el);\n    });\n  });\n\n  fieldsArr2.forEach((el) => {\n    el.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      ticFlags(event.target);\n    });\n  });\n}\n\nfunction initFields(countFields, countBombs, uroven) {\n  if (uroven === 1) {\n    bombsArr = Array(countBombs).fill('bomb');\n    emptyArr = Array(countFields * countFields - countBombs).fill('field');\n    gameShuflArr = emptyArr\n      .concat(bombsArr)\n      .sort(() => Math.random() - 0.5);\n\n    for (let i = 0; i < countFields * countFields; i++) {\n      const field = document.createElement('div');\n      field.classList.add(gameShuflArr[i]);\n      field.setAttribute('id', i);\n      document.querySelector('.minesweeper1').appendChild(field);\n      fieldsArr.push(field);\n    }\n    for (let i = 0; i < fieldsArr.length; i++) {\n      let numbers = 0;\n      const isLeftEdge = i % (countFields) === 0;\n      const isRightEdge = i % (countFields) === countFields - 1;\n\n      if (fieldsArr[i].classList.contains('field')) {\n        if (i - 1 >= 0 && !isLeftEdge && fieldsArr[i - 1].classList.contains('bomb')) numbers++;\n        // console.log(fieldsArr[i], numbers, \"левое\");\n        if (i + (countFields - 1) <= ((countFields * countFields) - 1)\n        && !isLeftEdge && fieldsArr[i + (countFields - 1)].classList.contains('bomb')) numbers++;\n        // console.log(fieldsArr[i], numbers, \"левое - нижнее\");\n        if (i - countFields >= 0\n        && fieldsArr[i - countFields].classList.contains('bomb')) numbers++;\n        // console.log(fieldsArr[i], numbers, \"верхнее\");\n        if (i - (countFields - 1) >= 0 && !isRightEdge\n        && fieldsArr[i - (countFields - 1)].classList.contains('bomb')) numbers++;\n        // console.log(fieldsArr[i], numbers, \"верхнее право\");\n        if (i + 1 <= ((countFields * countFields) - 1)\n        && !isRightEdge && fieldsArr[i + 1].classList.contains('bomb')) numbers++;\n        // console.log(fieldsArr[i], numbers, \"правое\");\n        if (i - (countFields + 1) >= 0 && !isLeftEdge\n        && fieldsArr[i - (countFields + 1)].classList.contains('bomb')) numbers++;\n        // console.log(fieldsArr[i], numbers, \"верхнее левое\");\n        if (i + (countFields + 1) <= ((countFields * countFields) - 1)\n        && !isRightEdge && fieldsArr[i + (countFields + 1)].classList.contains('bomb')) numbers++;\n        // console.log(fieldsArr[i], numbers, \"нижнее правое\");\n        if (i + countFields <= ((countFields * countFields) - 1)\n        && fieldsArr[i + countFields].classList.contains('bomb')) numbers++;\n        // console.log(fieldsArr[i], numbers, \"нижнее\");\n        fieldsArr[i].setAttribute('data', numbers);\n      }\n    }\n  }\n\n  if (uroven === 2) {\n    bombsArr = Array(countBombs).fill('bomb-medium');\n    emptyArr = Array(countFields * countFields - countBombs).fill('field-medium');\n    gameShuflArr = emptyArr\n      .concat(bombsArr)\n      .sort(() => Math.random() - 0.5);\n\n    for (let i = 0; i < countFields * countFields; i++) {\n      const field = document.createElement('div');\n      field.classList.add(gameShuflArr[i]);\n      field.setAttribute('id', i);\n      document.querySelector('.minesweeper2').appendChild(field);\n      fieldsArr1.push(field);\n    }\n    for (let i = 0; i < fieldsArr1.length; i++) {\n          let numbers = 0;\n          const isLeftEdge = i % (countFields) === 0;\n          const isRightEdge = i % (countFields) === countFields - 1;\n\n          if (fieldsArr1[i].classList.contains('field-medium')) {\n            if (i - 1 >= 0 && !isLeftEdge && fieldsArr1[i - 1].classList.contains('bomb-medium')) numbers++;\n            // console.log(fieldsArr1[i], numbers, \"левое\");\n            if (i + (countFields - 1) <= ((countFields * countFields) - 1)\n            && !isLeftEdge && fieldsArr1[i + (countFields - 1)].classList.contains('bomb-medium')) numbers++;\n            // console.log(fieldsArr1[i], numbers, \"левое - нижнее\");\n            if (i - countFields >= 0\n            && fieldsArr1[i - countFields].classList.contains('bomb-medium')) numbers++;\n            // console.log(fieldsArr1[i], numbers, \"верхнее\");\n            if (i - (countFields - 1) >= 0 && !isRightEdge\n            && fieldsArr1[i - (countFields - 1)].classList.contains('bomb-medium')) numbers++;\n            // console.log(fieldsArr1[i], numbers, \"верхнее право\");\n            if (i + 1 <= ((countFields * countFields) - 1)\n            && !isRightEdge && fieldsArr1[i + 1].classList.contains('bomb-medium')) numbers++;\n            // console.log(fieldsArr1[i], numbers, \"правое\");\n            if (i - (countFields + 1) >= 0 && !isLeftEdge\n            && fieldsArr1[i - (countFields + 1)].classList.contains('bomb-medium')) numbers++;\n            // console.log(fieldsArr1[i], numbers, \"верхнее левое\");\n            if (i + (countFields + 1) <= ((countFields * countFields) - 1)\n            && !isRightEdge && fieldsArr1[i + (countFields + 1)].classList.contains('bomb-medium')) numbers++;\n            // console.log(fieldsArr1[i], numbers, \"нижнее правое\");\n            if (i + countFields <= ((countFields * countFields) - 1)\n            && fieldsArr1[i + countFields].classList.contains('bomb-medium')) numbers++;\n            // console.log(fieldsArr1[i], numbers, \"нижнее\");\n            fieldsArr1[i].setAttribute('data', numbers);\n          }\n        }\n  }\n\n  if (uroven === 3) {\n    bombsArr = Array(countBombs).fill('bomb-hard');\n    emptyArr = Array(countFields * countFields - countBombs).fill('field-hard');\n    gameShuflArr = emptyArr\n      .concat(bombsArr)\n      .sort(() => Math.random() - 0.5);\n\n    for (let i = 0; i < countFields * countFields; i++) {\n      const field = document.createElement('div');\n      field.classList.add(gameShuflArr[i]);\n      field.setAttribute('id', i);\n      document.querySelector('.minesweeper3').appendChild(field);\n      fieldsArr2.push(field);\n    }\n    for (let i = 0; i < fieldsArr2.length; i++) {\n          let numbers = 0;\n          const isLeftEdge = i % (countFields) === 0;\n          const isRightEdge = i % (countFields) === countFields - 1;\n\n          if (fieldsArr2[i].classList.contains('field-hard')) {\n            if (i - 1 >= 0 && !isLeftEdge && fieldsArr2[i - 1].classList.contains('bomb-hard')) numbers++;\n            // console.log(fieldsArr2[i], numbers, \"левое\");\n            if (i + (countFields - 1) <= ((countFields * countFields) - 1)\n            && !isLeftEdge && fieldsArr2[i + (countFields - 1)].classList.contains('bomb-hard')) numbers++;\n            // console.log(fieldsArr2[i], numbers, \"левое - нижнее\");\n            if (i - countFields >= 0\n            && fieldsArr2[i - countFields].classList.contains('bomb-hard')) numbers++;\n            // console.log(fieldsArr2[i], numbers, \"верхнее\");\n            if (i - (countFields - 1) >= 0 && !isRightEdge\n            && fieldsArr2[i - (countFields - 1)].classList.contains('bomb-hard')) numbers++;\n            // console.log(fieldsArr2[i], numbers, \"верхнее право\");\n            if (i + 1 <= ((countFields * countFields) - 1)\n            && !isRightEdge && fieldsArr2[i + 1].classList.contains('bomb-hard')) numbers++;\n            // console.log(fieldsArr2[i], numbers, \"правое\");\n            if (i - (countFields + 1) >= 0 && !isLeftEdge\n            && fieldsArr2[i - (countFields + 1)].classList.contains('bomb-hard')) numbers++;\n            // console.log(fieldsArr2[i], numbers, \"верхнее левое\");\n            if (i + (countFields + 1) <= ((countFields * countFields) - 1)\n            && !isRightEdge && fieldsArr2[i + (countFields + 1)].classList.contains('bomb-hard')) numbers++;\n            // console.log(fieldsArr2[i], numbers, \"нижнее правое\");\n            if (i + countFields <= ((countFields * countFields) - 1)\n            && fieldsArr2[i + countFields].classList.contains('bomb-hard')) numbers++;\n            // console.log(fieldsArr2[i], numbers, \"нижнее\");\n            fieldsArr2[i].setAttribute('data', numbers);\n          }\n}\n}\n}","import { drawfield } from './drawfield.js';\nimport './styles/style.css';\n\ndrawfield();\n"],"names":["id","flagCount","clickfield","field","console","log","uroven","Number","getAttribute","classList","contains","isGameOver","numbers","innerText","add","document","querySelector","isLeftEdge","countFields","isRightEdge","setTimeout","fieldsArr","newId","getElementById","emptyFieldGrow","fieldsArr1","emptyFieldGrowMedium","fieldsArr2","emptyFieldGrowHard","ticFlags","drawFlag","drawBombs","countBombs","remove","checkWin","i","length","winWin","bombsArr","emptyArr","gameShuflArr","body","container","createElement","header","title","gamesSummary","wrap","flag","mines","sound","drawSounds","start","drawStart","score","drawlist","level","easy","medium","hard","minesweeper1","minesweeper2","minesweeper3","drawfield","appendChild","innerHTML","initFields","forEach","el","addEventListener","event","preventDefault","target","eventClick","eventClickMedium","eventClickHard","Array","fill","concat","sort","Math","random","setAttribute","push","location","reload"],"sourceRoot":""}