{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://minesweeper/./src/clickfield.js","webpack://minesweeper/./src/drawfield.js","webpack://minesweeper/./src/index.js"],"sourcesContent":["import {\n  fieldsArr, countFields, countBombs, isGameOver,\n} from './drawfield.js';\n\nexport let flagCount = 0;\nlet id;\n\n\nexport function clickfield(field) {\n  id = Number(field.getAttribute('id'));\n\n  if (field.classList.contains('open') || field.classList.contains('flag')) return;\n  if (isGameOver) return;\n  if (field.classList.contains('bomb')) return;\n\n  const numbers = field.getAttribute('data');\n  if (numbers != 0) {\n    field.innerText = numbers;\n    field.classList.add('open');\n    field.classList.add('number');\n    switch (numbers) {\n      case '1':\n        field.classList.add('one');\n        break;\n\n      case '2':\n        field.classList.add('two');\n        break;\n      case '3':\n        field.classList.add('three');\n        break;\n      case '4':\n        field.classList.add('four');\n        break;\n      default:\n                // do nothing;\n    }\n  }\n  emptyFieldGrow(id);\n  fieldsArr[id].classList.add('open');\n}\n\nfunction emptyFieldGrow(id) {\n  const isLeftEdge = (id % countFields === 0);\n\n  const isRightEdge = (id % countFields === countFields - 1);\n\n  setTimeout(() => {\n    if (id + 1 <= ((countFields * countFields) - 1) && !isRightEdge && !fieldsArr[id].classList.contains('number')\n  && !fieldsArr[id + 1].classList.contains('open')\n  && !fieldsArr[id + 1].classList.contains('flag')\n  && !fieldsArr[id + 1].classList.contains('bomb')) {\n      const newId = fieldsArr[id + 1].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id - 1 >= 0 && !isLeftEdge && !fieldsArr[id].classList.contains('number')\n      && !fieldsArr[id - 1].classList.contains('open')\n&& !fieldsArr[id - 1].classList.contains('flag')\n&& !fieldsArr[id - 1].classList.contains('bomb')) {\n      const newId = fieldsArr[id - 1].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id + countFields <= ((countFields * countFields) - 1) && !fieldsArr[id].classList.contains('number') /// нижнее поле (проверка на вариабельность)\n   && !fieldsArr[id + countFields].classList.contains('open')\n   && !fieldsArr[id + countFields].classList.contains('flag')\n   && !fieldsArr[id + countFields].classList.contains('bomb')) {\n      const newId = fieldsArr[id + countFields].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id + (countFields + 1) <= ((countFields * countFields) - 1) && !isRightEdge && !fieldsArr[id].classList.contains('number') /// нижнее правое поле\n    && !fieldsArr[id + (countFields + 1)].classList.contains('open')\n    && !fieldsArr[id + (countFields + 1)].classList.contains('flag')\n    && !fieldsArr[id + (countFields + 1)].classList.contains('bomb')) {\n      const newId = fieldsArr[id + (countFields + 1)].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id + (countFields - 1) <= ((countFields * countFields) - 1) && !isLeftEdge && !fieldsArr[id].classList.contains('number') /// нижнее левое поле\n    && !fieldsArr[id + (countFields - 1)].classList.contains('open')\n    && !fieldsArr[id + (countFields - 1)].classList.contains('flag')\n    && !fieldsArr[id + (countFields - 1)].classList.contains('bomb')) {\n      const newId = fieldsArr[id + (countFields - 1)].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id - (countFields - 1) >= 0 && !isRightEdge && !fieldsArr[id].classList.contains('number') /// верхнее правое поле\n      && !fieldsArr[id - (countFields - 1)].classList.contains('open')\n      && !fieldsArr[id - (countFields - 1)].classList.contains('flag')\n      && !fieldsArr[id - (countFields - 1)].classList.contains('bomb')) {\n      const newId = fieldsArr[id - (countFields - 1)].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id - countFields >= 0 && !fieldsArr[id].classList.contains('number') /// /верхнее поле\n    && !fieldsArr[id - countFields].classList.contains('open')\n   && !fieldsArr[id - countFields].classList.contains('flag')\n   && !fieldsArr[id - countFields].classList.contains('bomb')) {\n      const newId = fieldsArr[id - countFields].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n    if (id - (countFields + 1) >= 0 && !isLeftEdge && !fieldsArr[id].classList.contains('number') /// /верхнее левое поле\n      && !fieldsArr[id - (countFields + 1)].classList.contains('open')\n      && !fieldsArr[id - (countFields + 1)].classList.contains('flag')\n      && !fieldsArr[id - (countFields + 1)].classList.contains('bomb')) {\n      const newId = fieldsArr[id - (countFields + 1)].id;\n      const newField = document.getElementById(newId);\n      clickfield(newField);\n    }\n  }, 50);\n}\n\nexport function ticFlags(field) {\n  const drawFlag = document.querySelector('.drawFlag');\n  const drawBombs = document.querySelector('.drawBombs');\n  if (isGameOver) return;\n  if (!field.classList.contains('open') && flagCount < countBombs) {\n    if (!field.classList.contains('flag')) {\n      field.classList.add('flag');\n      flagCount++;\n      drawFlag.innerText = flagCount;\n      drawBombs.innerText = countBombs - flagCount;\n      winWin();\n    } else {\n      field.classList.remove('flag');\n      flagCount--;\n      drawFlag.innerText = flagCount;\n      drawBombs.innerText = countBombs - flagCount;\n    }\n  }\n}\n\nfunction winWin() {\n  let checkWin = 0;\n  for (let i = 0; i < fieldsArr.length; i++) {\n    if (fieldsArr[i].classList.contains('flag') && fieldsArr[i].classList.contains('bomb')) {\n      checkWin++;\n    } if (checkWin === countBombs) {\n      document.querySelector('.gameSummary').innerText = 'HOORAY YOU WON!!!';\n      for (let i = 0; i < fieldsArr.length; i++) {\n        fieldsArr[i].classList.add('open');\n      }\n    }\n  }\n}\n","import { clickfield, ticFlags } from './clickfield.js';\n\nconst { body } = document;\nexport let isGameOver = false;\nexport const fieldsArr = [];\nexport let countFields;\nexport let countBombs;\nlet bombsArr;\nlet emptyArr;\nlet gameShuflArr;\n\nexport function drawfield() {\n  const container = document.createElement('div');\n  container.classList.add('container');\n  body.appendChild(container);\n\n  const header = document.createElement('header');\n  header.classList.add('header');\n  container.appendChild(header);\n\n  const title = document.createElement('h1');\n  title.classList.add('header__title');\n  header.appendChild(title);\n  title.innerText = 'minesweeper';\n\n  const gamesSummary = document.createElement('p');\n  gamesSummary.classList.add('gameSummary');\n  header.appendChild(gamesSummary);\n  gamesSummary.innerText = 'Please choose level';\n\n  const wrap = document.createElement('div');\n  wrap.classList.add('header__wrapper');\n  header.appendChild(wrap);\n\n  const flag = document.createElement('div');\n  flag.classList.add('header__flag');\n  wrap.appendChild(flag);\n  flag.innerText = 'flags';\n  const drawFlag = document.createElement('div');\n  drawFlag.classList.add('drawFlag');\n  flag.appendChild(drawFlag);\n  drawFlag.innerText = 0;\n\n  const mines = document.createElement('div');\n  mines.classList.add('header__mines');\n  wrap.appendChild(mines);\n  mines.innerText = 'mines';\n  const drawBombs = document.createElement('div');\n  drawBombs.classList.add('drawBombs');\n  mines.appendChild(drawBombs);\n\n  const sound = document.createElement('div');\n  sound.classList.add('header__sound');\n  wrap.appendChild(sound);\n  sound.innerText = 'sound';\n  const drawSounds = document.createElement('div');\n  drawSounds.classList.add('drawSounds');\n  sound.appendChild(drawSounds);\n  drawSounds.innerText = 'pull';\n\n  const start = document.createElement('div');\n  start.classList.add('header__start');\n  wrap.appendChild(start);\n  start.innerText = 'start';\n  const drawStart = document.createElement('div');\n  drawStart.classList.add('drawStart');\n  start.appendChild(drawStart);\n  drawStart.innerText = 'pull';\n\n  const score = document.createElement('div');\n  score.classList.add('header__score');\n  wrap.appendChild(score);\n  score.innerText = 'score';\n  const drawlist = document.createElement('div');\n  drawlist.classList.add('drawList');\n  score.appendChild(drawlist);\n  drawlist.innerText = 'list';\n\n  const level = document.createElement('div');\n  level.classList.add('header__level');\n  wrap.appendChild(level);\n  level.innerText = 'level';\n\n  const easy = document.createElement('div');\n  easy.classList.add('level__easy');\n  level.appendChild(easy);\n  easy.innerText = 'easy';\n\n  const medium = document.createElement('div');\n  medium.classList.add('level__medium');\n  level.appendChild(medium);\n  medium.innerText = 'medium';\n\n  const hard = document.createElement('div');\n  hard.classList.add('level__hard');\n  level.appendChild(hard);\n  hard.innerText = 'hard';\n\n  const minesweeper = document.createElement('div');\n  minesweeper.classList.add('minesweeper');\n  container.appendChild(minesweeper);\n\n  drawStart.addEventListener('click', (event) => {\n    event.preventDefault();\n    location.reload();\n  });\n\n  level.addEventListener('click', (event) => {\n    event.preventDefault();\n    if (event.target.classList.contains('level__easy')) {\n      easy.classList.add('active-easy');\n      eventEasy();\n    }\n    if (event.target.classList.contains('level__medium')) {\n      medium.classList.add('active-medium');\n      eventMedium();\n    }\n    if (event.target.classList.contains('level__hard')) {\n      hard.classList.add('active-hard');\n      eventHard();\n    }\n    if (hard.classList.contains('active-hard') && medium.classList.contains('active-medium')) {\n      location.reload();\n    }\n    if (medium.classList.contains('active-medium') && easy.classList.contains('active-easy')) {\n      location.reload();\n    }\n    if (hard.classList.contains('active-hard') && easy.classList.contains('active-easy')) {\n      location.reload();\n    }\n    if (hard.classList.contains('active-hard') && easy.classList.contains('active-easy')\n    && medium.classList.contains('active-medium')) {\n      location.reload();\n    }\n  });\n\n  function eventEasy() {\n    if (easy.classList.contains('active-easy')) {\n      countFields = 10;\n      countBombs = 10;\n      drawBombs.innerText = countBombs;\n      initFields(countFields, countBombs);\n\n      fieldsArr.forEach((el) => {\n        el.addEventListener('click', (event) => {\n          event.preventDefault();\n          if (el.classList.contains('bomb')) {\n            isGameOver = true;\n            gamesSummary.innerText = 'BOOM! OOPS YOU LOST!';\n            fieldsArr.forEach((el) => {\n              if (el.classList.contains('bomb')) {\n                if (el.classList.contains('bomb')) {\n                  el.classList.add('bomb-open');\n                }\n              }\n            });\n          } if (el.classList.contains('flag')) {\n            return;\n          }\n          clickfield(el);\n        });\n      });\n\n      fieldsArr.forEach((el) => {\n        el.addEventListener('contextmenu', (event) => {\n          event.preventDefault();\n          ticFlags(event.target);\n        });\n      });\n    }\n  }\n\n  function eventMedium() {\n    if (medium.classList.contains('active-medium')) {\n      countFields = 15;\n      countBombs = 15;\n      drawBombs.innerText = countBombs;\n      initFields(countFields, countBombs);\n\n      for (let i = 0; i < fieldsArr.length; i++) {\n        if (fieldsArr[i].classList.contains('field')) {\n          fieldsArr[i].classList.add('field-medium');\n        }\n        if (fieldsArr[i].classList.contains('bomb')) {\n          fieldsArr[i].classList.add('bomb-medium');\n        }\n      }\n\n      fieldsArr.forEach((el) => {\n        el.addEventListener('click', (event) => {\n          event.preventDefault();\n          if (el.classList.contains('bomb')) {\n            isGameOver = true;\n            gamesSummary.innerText = 'BOOM! OOPS YOU LOST!';\n            fieldsArr.forEach((el) => {\n              if (el.classList.contains('bomb')) {\n                if (el.classList.contains('bomb')) {\n                  el.classList.add('bomb-open');\n                }\n              }\n            });\n          } if (el.classList.contains('flag')) {\n            return;\n          }\n          clickfield(el);\n        });\n      });\n    }\n    fieldsArr.forEach((el) => {\n      el.addEventListener('contextmenu', (event) => {\n        event.preventDefault();\n        ticFlags(event.target);\n      });\n    });\n  }\n\n  function eventHard() {\n    if (hard.classList.contains('active-hard')) {\n      countFields = 25;\n      countBombs = 35;\n      drawBombs.innerText = countBombs;\n      initFields(countFields, countBombs);\n\n      for (let i = 0; i < fieldsArr.length; i++) {\n        if (fieldsArr[i].classList.contains('field')) {\n          fieldsArr[i].classList.add('field-hard');\n        }\n        if (fieldsArr[i].classList.contains('bomb')) {\n          fieldsArr[i].classList.add('bomb-hard');\n        }\n      }\n\n      fieldsArr.forEach((el) => {\n        el.addEventListener('click', (event) => {\n          event.preventDefault();\n          if (el.classList.contains('bomb')) {\n            isGameOver = true;\n            gamesSummary.innerText = 'BOOM! OOPS YOU LOST!';\n            fieldsArr.forEach((el) => {\n              if (el.classList.contains('bomb')) {\n                el.classList.add('bomb-open');\n              }\n            });\n          } if (el.classList.contains('flag')) {\n            return;\n          }\n          clickfield(el);\n        });\n      });\n\n      fieldsArr.forEach((el) => {\n        el.addEventListener('contextmenu', (event) => {\n          event.preventDefault();\n          ticFlags(event.target);\n        });\n      });\n    }\n  }\n}\n\nfunction initFields(countFields, countBombs) {\n  bombsArr = Array(countBombs).fill('bomb');\n  emptyArr = Array(countFields * countFields - countBombs).fill('field');\n  gameShuflArr = emptyArr\n    .concat(bombsArr)\n    .sort(() => Math.random() - 0.5);\n\n  for (let i = 0; i < countFields * countFields; i++) {\n    const field = document.createElement('div');\n    field.classList.add(gameShuflArr[i]);\n    field.setAttribute('id', i);\n    document.querySelector('.minesweeper').appendChild(field);\n    fieldsArr.push(field);\n  }\n\n  // /// write numbers ///\n\n  for (let i = 0; i < fieldsArr.length; i++) {\n    let numbers = 0;\n    const isLeftEdge = i % (countFields) === 0;\n    const isRightEdge = i % (countFields) === countFields - 1;\n\n    if (fieldsArr[i].classList.contains('field')) {\n      if (i - 1 >= 0 && !isLeftEdge && fieldsArr[i - 1].classList.contains('bomb')) numbers++;\n      // console.log(fieldsArr[i], numbers, \"левое\");\n      if (i + (countFields - 1) <= ((countFields * countFields) - 1)\n      && !isLeftEdge && fieldsArr[i + (countFields - 1)].classList.contains('bomb')) numbers++;\n      // console.log(fieldsArr[i], numbers, \"левое - нижнее\");\n      if (i - countFields >= 0\n      && fieldsArr[i - countFields].classList.contains('bomb')) numbers++;\n      // console.log(fieldsArr[i], numbers, \"верхнее\");\n      if (i - (countFields - 1) >= 0 && !isRightEdge\n      && fieldsArr[i - (countFields - 1)].classList.contains('bomb')) numbers++;\n      // console.log(fieldsArr[i], numbers, \"верхнее право\");\n      if (i + 1 <= ((countFields * countFields) - 1)\n      && !isRightEdge && fieldsArr[i + 1].classList.contains('bomb')) numbers++;\n      // console.log(fieldsArr[i], numbers, \"правое\");\n      if (i - (countFields + 1) >= 0 && !isLeftEdge\n      && fieldsArr[i - (countFields + 1)].classList.contains('bomb')) numbers++;\n      // console.log(fieldsArr[i], numbers, \"верхнее левое\");\n      if (i + (countFields + 1) <= ((countFields * countFields) - 1)\n      && !isRightEdge && fieldsArr[i + (countFields + 1)].classList.contains('bomb')) numbers++;\n      // console.log(fieldsArr[i], numbers, \"нижнее правое\");\n      if (i + countFields <= ((countFields * countFields) - 1)\n      && fieldsArr[i + countFields].classList.contains('bomb')) numbers++;\n      // console.log(fieldsArr[i], numbers, \"нижнее\");\n      fieldsArr[i].setAttribute('data', numbers);\n    }\n  }\n  return fieldsArr;\n}\n","import { drawfield } from './drawfield.js';\nimport './styles/style.css';\n\ndrawfield();\n"],"names":["id","flagCount","clickfield","field","Number","getAttribute","classList","contains","isGameOver","numbers","innerText","add","isLeftEdge","countFields","isRightEdge","setTimeout","fieldsArr","newId","document","getElementById","emptyFieldGrow","ticFlags","drawFlag","querySelector","drawBombs","countBombs","remove","checkWin","i","length","winWin","bombsArr","emptyArr","gameShuflArr","body","initFields","Array","fill","concat","sort","Math","random","createElement","setAttribute","appendChild","push","container","header","title","gamesSummary","wrap","flag","mines","sound","drawSounds","start","drawStart","score","drawlist","level","easy","medium","hard","minesweeper","addEventListener","event","preventDefault","location","reload","target","forEach","el","eventMedium","eventHard","drawfield"],"sourceRoot":""}